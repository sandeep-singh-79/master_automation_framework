# --- Stage 1: Maven dependency caching ---
FROM maven:3.9.9-eclipse-temurin-21 AS build

WORKDIR /project

# Copy only the POM first for better Docker layer caching
COPY pom.xml /project/
RUN mvn dependency:go-offline

# Now copy the rest of the source code
COPY . /project

# --- Stage 2: Runtime image with browsers, Xvfb, and test code ---
FROM maven:3.9.9-eclipse-temurin-21

ARG CHROME_VERSION=133.0.6943.98
ARG FIREFOX_VERSION=139.0.4
ARG GECKODRIVER_VERSION=0.36.0

# Install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    wget curl unzip xz-utils tar bash xvfb \
    libappindicator3-1 libasound2t64 \
    at-spi2-core dbus libnspr4 \
    libnss3 xdg-utils \
    vulkan-tools mesa-utils \
    libharfbuzz0b libfreetype6 fonts-freefont-ttf && \
    rm -rf /var/lib/apt/lists/*

# Install Chrome for Testing (dynamic version)
RUN wget -q -O /tmp/chrome-linux64.zip "https://storage.googleapis.com/chrome-for-testing-public/${CHROME_VERSION}/linux64/chrome-linux64.zip" && \
    unzip /tmp/chrome-linux64.zip -d /usr/local/bin/ && \
    mv /usr/local/bin/chrome-linux64 /usr/local/bin/google-chrome && \
    ln -s /usr/local/bin/google-chrome/chrome /usr/bin/google-chrome && \
    chmod +x /usr/bin/google-chrome && \
    rm /tmp/chrome-linux64.zip

RUN wget -q -O /tmp/chromedriver-linux64.zip "https://storage.googleapis.com/chrome-for-testing-public/${CHROME_VERSION}/linux64/chromedriver-linux64.zip" && \
    unzip /tmp/chromedriver-linux64.zip -d /usr/local/bin/ && \
    mv /usr/local/bin/chromedriver-linux64 /usr/local/bin/chromedriver && \
    ln -s /usr/local/bin/chromedriver/chromedriver /usr/bin/chromedriver && \
    chmod +x /usr/bin/chromedriver && \
    rm /tmp/chromedriver-linux64.zip

# Install Firefox (dynamic version)
RUN wget -q -O /tmp/firefox.tar.xz "https://ftp.mozilla.org/pub/firefox/releases/${FIREFOX_VERSION}/linux-x86_64/en-US/firefox-${FIREFOX_VERSION}.tar.xz" && \
    mkdir -p /opt && \
    tar -xJf /tmp/firefox.tar.xz -C /opt && \
    rm /tmp/firefox.tar.xz && \
    mv /opt/firefox /opt/firefox-${FIREFOX_VERSION} && \
    ln -s /opt/firefox-${FIREFOX_VERSION}/firefox /usr/bin/firefox && \
    chmod +x /usr/bin/firefox


RUN wget -q -O /tmp/geckodriver.tar.gz "https://github.com/mozilla/geckodriver/releases/download/v${GECKODRIVER_VERSION}/geckodriver-v${GECKODRIVER_VERSION}-linux64.tar.gz" && \
    tar -xzf /tmp/geckodriver.tar.gz -C /usr/local/bin && \
    chmod +x /usr/local/bin/geckodriver && \
    rm /tmp/geckodriver.tar.gz


# Set environment variables
ENV CHROME_BIN="/usr/bin/google-chrome"
ENV FIREFOX_BIN="/usr/bin/firefox"
ENV CHROMEDRIVER_VERSION=${CHROME_VERSION}
ENV FIREFOX_VERSION=${FIREFOX_VERSION}
ENV DISPLAY=:99

# Copy dependencies and only needed project content
COPY --from=build /root/.m2 /root/.m2
COPY --from=build /project /project

# Clean unnecessary folders from final image
RUN rm -rf /project/.idea /project/logs /project/screenshots || true

# Add entrypoint script for optional Xvfb usage
# Now copy the entrypoint from the right location
COPY ./entrypoint.sh /project/entrypoint.sh
RUN chmod +x /project/entrypoint.sh

WORKDIR /project
ENTRYPOINT ["./entrypoint.sh"]